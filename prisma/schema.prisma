// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enum Gender{
//   Nam
//   Nu
// }

model Employee {
  id              Int            @id @default(autoincrement())
  full_name       String         @db.VarChar(100)
  date_of_birth   DateTime
  gender          String
  address         String
  phone_number    String
  email           String?
  job_title       String
  start_date      DateTime
  salary          Int
  profile_picture String?
  password        String
  loan_contract   LoanContract[]
  Account         Account?       @relation(fields: [accountId], references: [id])
  accountId       Int?
}

model Borrower {
  id            Int            @id @default(autoincrement())
  full_name     String
  job_title     String
  address       String
  phone_number  String
  income        Decimal        @db.Money
  outcome       Decimal        @db.Money
  CCCD          String
  loan_contract LoanContract[]
  payment       Payment[]
  Account       Account?       @relation(fields: [accountId], references: [id])
  accountId     Int?
}

model Lender {
  id            Int            @id @default(autoincrement())
  bank          String
  branch        String
  address       String
  full_name     String
  job_title     String
  loan_contract LoanContract[]
  Account       Account?       @relation(fields: [accountId], references: [id])
  accountId     Int?
}

model LoanPackage {
  id              Int            @id @default(autoincrement())
  name            String
  guarantee_type  String
  interest_rate   Decimal
  duration        Int
  description     String
  max_money       Decimal        @db.Money
  min_money       Decimal        @db.Money
  interest_period Int
  loan_contract   LoanContract[]
}

model LoanContract {
  id              Int          @id @default(autoincrement())
  money           Decimal      @db.Money
  purpose         String
  loan_date       DateTime
  expire_date     DateTime
  contract_status String
  loan_method     String
  payment         Payment[]
  Employee        Employee?    @relation(fields: [employeeId], references: [id])
  employeeId      Int?
  Borrower        Borrower?    @relation(fields: [borrowerId], references: [id])
  borrowerId      Int?
  Lender          Lender?      @relation(fields: [lenderId], references: [id])
  lenderId        Int?
  LoanPackage     LoanPackage? @relation(fields: [loanPackageId], references: [id])
  loanPackageId   Int?
}

model Payment {
  id                  Int           @id @default(autoincrement())
  pay_date            Decimal       @db.Money
  money               Decimal       @db.Money
  principal_amount    Decimal       @db.Money
  profit_amount       Decimal       @db.Money
  payment_method      String
  financial_situation String
  property_status     String
  Borrower            Borrower?     @relation(fields: [borrowerId], references: [id])
  borrowerId          Int?
  LoanContract        LoanContract? @relation(fields: [loanContractId], references: [id])
  loanContractId      Int?
}

model Account {
  id       Int        @id @default(autoincrement())
  username String     @unique
  password String     
  role     String
  Employee Employee[]
  Borrower Borrower[]
  Lender   Lender[]
}
